// auto generated 2020-05-06 16:28:57.079165 +0200 CEST m=+9.900394329

package api

import (
	"encoding/base64"

	jsadvisory "github.com/nats-io/jsm.go/api/jetstream/advisory"
	jsmetric "github.com/nats-io/jsm.go/api/jetstream/metric"
	srvadvisory "github.com/nats-io/jsm.go/api/server/advisory"
	srvmetric "github.com/nats-io/jsm.go/api/server/metric"
)

var schemas map[string][]byte

var schemaTypes = map[string]func() interface{}{
	"io.nats.server.advisory.v1.client_connect":                func() interface{} { return &srvadvisory.ConnectEventMsgV1{} },
	"io.nats.server.advisory.v1.client_disconnect":             func() interface{} { return &srvadvisory.DisconnectEventMsgV1{} },
	"io.nats.server.metric.v1.service_latency":                 func() interface{} { return &srvmetric.ServiceLatencyV1{} },
	"io.nats.jetstream.advisory.v1.api_audit":                  func() interface{} { return &jsadvisory.JetStreamAPIAuditV1{} },
	"io.nats.jetstream.advisory.v1.max_deliver":                func() interface{} { return &jsadvisory.ConsumerDeliveryExceededAdvisoryV1{} },
	"io.nats.jetstream.metric.v1.consumer_ack":                 func() interface{} { return &jsmetric.ConsumerAckMetricV1{} },
	"io.nats.jetstream.api.v1.consumer_configuration":          func() interface{} { return &ConsumerConfig{} },
	"io.nats.jetstream.api.v1.stream_configuration":            func() interface{} { return &StreamConfig{} },
	"io.nats.jetstream.api.v1.stream_template_configuration":   func() interface{} { return &StreamTemplateConfig{} },
	"io.nats.jetstream.api.v1.account_info_response":           func() interface{} { return &JSApiAccountInfoResponse{} },
	"io.nats.jetstream.api.v1.consumer_create_response":        func() interface{} { return &JSApiConsumerCreateResponse{} },
	"io.nats.jetstream.api.v1.consumer_delete_response":        func() interface{} { return &JSApiConsumerDeleteResponse{} },
	"io.nats.jetstream.api.v1.consumer_info_response":          func() interface{} { return &JSApiConsumerInfoResponse{} },
	"io.nats.jetstream.api.v1.consumer_list_request":           func() interface{} { return &JSApiConsumerListRequest{} },
	"io.nats.jetstream.api.v1.consumer_list_response":          func() interface{} { return &JSApiConsumerListResponse{} },
	"io.nats.jetstream.api.v1.consumer_names_request":          func() interface{} { return &JSApiConsumerNamesRequest{} },
	"io.nats.jetstream.api.v1.consumer_names_response":         func() interface{} { return &JSApiConsumerNamesResponse{} },
	"io.nats.jetstream.api.v1.stream_create_response":          func() interface{} { return &JSApiStreamCreateResponse{} },
	"io.nats.jetstream.api.v1.stream_delete_response":          func() interface{} { return &JSApiStreamDeleteResponse{} },
	"io.nats.jetstream.api.v1.stream_info_response":            func() interface{} { return &JSApiStreamInfoResponse{} },
	"io.nats.jetstream.api.v1.stream_list_request":             func() interface{} { return &JSApiStreamListRequest{} },
	"io.nats.jetstream.api.v1.stream_list_response":            func() interface{} { return &JSApiStreamListResponse{} },
	"io.nats.jetstream.api.v1.stream_msg_delete_response":      func() interface{} { return &JSApiMsgDeleteResponse{} },
	"io.nats.jetstream.api.v1.stream_msg_get_request":          func() interface{} { return &JSApiMsgGetRequest{} },
	"io.nats.jetstream.api.v1.stream_msg_get_response":         func() interface{} { return &JSApiMsgGetResponse{} },
	"io.nats.jetstream.api.v1.stream_names_request":            func() interface{} { return &JSApiStreamNamesRequest{} },
	"io.nats.jetstream.api.v1.stream_names_response":           func() interface{} { return &JSApiStreamNamesResponse{} },
	"io.nats.jetstream.api.v1.stream_purge_response":           func() interface{} { return &JSApiStreamPurgeResponse{} },
	"io.nats.jetstream.api.v1.stream_template_create_response": func() interface{} { return &JSApiStreamTemplateCreateResponse{} },
	"io.nats.jetstream.api.v1.stream_template_delete_response": func() interface{} { return &JSApiStreamTemplateDeleteResponse{} },
	"io.nats.jetstream.api.v1.stream_template_info_response":   func() interface{} { return &JSApiStreamTemplateInfoResponse{} },
	"io.nats.jetstream.api.v1.stream_template_names_response":  func() interface{} { return &JSApiStreamTemplateNamesResponse{} },
	"io.nats.jetstream.api.v1.stream_template_names_request":   func() interface{} { return &JSApiStreamTemplateNamesRequest{} },
	"io.nats.jetstream.api.v1.stream_update_response":          func() interface{} { return &JSApiStreamUpdateResponse{} },
	"io.nats.unknown_message":                                  func() interface{} { return &UnknownMessage{} },
}

// Validate performs a JSON Schema validation of the configuration
func (t ConsumerConfig) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_configuration
func (t ConsumerConfig) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_configuration"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t ConsumerConfig) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_configuration.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t ConsumerConfig) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t StreamConfig) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_configuration
func (t StreamConfig) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_configuration"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t StreamConfig) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_configuration.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t StreamConfig) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t StreamTemplateConfig) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_configuration
func (t StreamTemplateConfig) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_configuration"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t StreamTemplateConfig) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_configuration.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t StreamTemplateConfig) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiAccountInfoResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.account_info_response
func (t JSApiAccountInfoResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.account_info_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiAccountInfoResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/account_info_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiAccountInfoResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerCreateResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_create_response
func (t JSApiConsumerCreateResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_create_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerCreateResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_create_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerCreateResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerDeleteResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_delete_response
func (t JSApiConsumerDeleteResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_delete_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerDeleteResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_delete_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerDeleteResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerInfoResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_info_response
func (t JSApiConsumerInfoResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_info_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerInfoResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_info_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerInfoResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerListRequest) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_list_request
func (t JSApiConsumerListRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_list_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerListRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_list_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerListRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerListResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_list_response
func (t JSApiConsumerListResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_list_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerListResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_list_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerListResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerNamesRequest) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_names_request
func (t JSApiConsumerNamesRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_names_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerNamesRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_names_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerNamesRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerNamesResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_names_response
func (t JSApiConsumerNamesResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_names_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerNamesResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_names_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerNamesResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamCreateResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_create_response
func (t JSApiStreamCreateResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_create_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamCreateResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_create_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamCreateResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamDeleteResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_delete_response
func (t JSApiStreamDeleteResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_delete_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamDeleteResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_delete_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamDeleteResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamInfoResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_info_response
func (t JSApiStreamInfoResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_info_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamInfoResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_info_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamInfoResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamListRequest) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_list_request
func (t JSApiStreamListRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_list_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamListRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_list_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamListRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamListResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_list_response
func (t JSApiStreamListResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_list_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamListResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_list_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamListResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiMsgDeleteResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_msg_delete_response
func (t JSApiMsgDeleteResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_msg_delete_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiMsgDeleteResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_msg_delete_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiMsgDeleteResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiMsgGetRequest) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_msg_get_request
func (t JSApiMsgGetRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_msg_get_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiMsgGetRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_msg_get_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiMsgGetRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiMsgGetResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_msg_get_response
func (t JSApiMsgGetResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_msg_get_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiMsgGetResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_msg_get_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiMsgGetResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamNamesRequest) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_names_request
func (t JSApiStreamNamesRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_names_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamNamesRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_names_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamNamesRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamNamesResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_names_response
func (t JSApiStreamNamesResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_names_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamNamesResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_names_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamNamesResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamPurgeResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_purge_response
func (t JSApiStreamPurgeResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_purge_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamPurgeResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_purge_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamPurgeResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateCreateResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_create_response
func (t JSApiStreamTemplateCreateResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_create_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateCreateResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_create_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateCreateResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateDeleteResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_delete_response
func (t JSApiStreamTemplateDeleteResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_delete_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateDeleteResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_delete_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateDeleteResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateInfoResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_info_response
func (t JSApiStreamTemplateInfoResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_info_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateInfoResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_info_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateInfoResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateNamesResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_names_response
func (t JSApiStreamTemplateNamesResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_names_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateNamesResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_names_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateNamesResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateNamesRequest) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_names_request
func (t JSApiStreamTemplateNamesRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_names_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateNamesRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_names_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateNamesRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamUpdateResponse) Validate() (valid bool, errors []string) {
	return ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_update_response
func (t JSApiStreamUpdateResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_update_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamUpdateResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_update_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamUpdateResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

func init() {
	schemas = make(map[string][]byte)
	schemas["io.nats.server.advisory.v1.client_connect"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9zZXJ2ZXIvYWR2aXNvcnkvdjEvY2xpZW50X2Nvbm5lY3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFkdmlzb3J5IHB1Ymxpc2hlZCBhIGNsaWVudCBjb25uZWN0cyB0byB0aGUgTkFUUyBTZXJ2ZXIiLAogICJ0aXRsZSI6ICJpby5uYXRzLnNlcnZlci5hZHZpc29yeS52MS5jbGllbnRfY29ubmVjdCIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic2VydmVyIiwKICAgICJjbGllbnQiCiAgXSwKICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuc2VydmVyLmFkdmlzb3J5LnYxLmNsaWVudF9jb25uZWN0IgogICAgfSwKICAgICJpZCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlVuaXF1ZSBjb3JyZWxhdGlvbiBJRCBmb3IgdGhpcyBldmVudCIKICAgIH0sCiAgICAidGltZXN0YW1wIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdGltZSB0aGlzIGV2ZW50IHdhcyBjcmVhdGVkIGluIFJGQzMzMzkgZm9ybWF0IgogICAgfSwKICAgICJzZXJ2ZXIiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgImRlc2NyaXB0aW9uIjogIkRldGFpbHMgYWJvdXQgdGhlIHNlcnZlciB0aGUgY2xpZW50IGNvbm5lY3RlZCB0byIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAibmFtZSIsCiAgICAgICAgImhvc3QiLAogICAgICAgICJpZCIsCiAgICAgICAgInZlciIsCiAgICAgICAgInNlcSIsCiAgICAgICAgImpldHN0cmVhbSIsCiAgICAgICAgInRpbWUiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgY29uZmlndXJlZCBuYW1lIGZvciB0aGUgc2VydmVyLCBtYXRjaGVzIElEIHdoZW4gdW5jb25maWd1cmVkIiwKICAgICAgICAgICJtaW5MZW5ndGgiOiAxCiAgICAgICAgfSwKICAgICAgICAiaG9zdCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGhvc3QgdGhpcyBzZXJ2ZXIgcnVucyBvbiwgdHlwaWNhbGx5IGEgSVAgYWRkcmVzcyIKICAgICAgICB9LAogICAgICAgICJpZCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHVuaXF1ZSBzZXJ2ZXIgSUQgZm9yIHRoaXMgbm9kZSIKICAgICAgICB9LAogICAgICAgICJjbHVzdGVyIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgY2x1c3RlciB0aGUgc2VydmVyIGJlbG9uZ3MgdG8iCiAgICAgICAgfSwKICAgICAgICAidmVyIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdmVyc2lvbiBOQVRTIHJ1bm5pbmcgb24gdGhlIHNlcnZlciIKICAgICAgICB9LAogICAgICAgICJzZXEiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbnRlcm5hbCBzZXJ2ZXIgc2VxdWVuY2UgSUQiCiAgICAgICAgfSwKICAgICAgICAiamV0c3RyZWFtIjogewogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW5kaWNhdGVzIGlmIHRoaXMgc2VydmVyIGhhcyBKZXRTdHJlYW0gZW5hYmxlZCIKICAgICAgICB9LAogICAgICAgICJ0aW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbG9jYWwgdGltZSBvZiB0aGUgc2VydmVyIgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJjbGllbnQiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgImRlc2NyaXB0aW9uIjogIkRldGFpbHMgYWJvdXQgdGhlIGNsaWVudCB0aGF0IGNvbm5lY3RlZCB0byB0aGUgc2VydmVyIiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJpZCIsCiAgICAgICAgImFjYyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN0YXJ0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lc3RhbXAgd2hlbiB0aGUgY2xpZW50IGNvbm5lY3RlZCIKICAgICAgICB9LAogICAgICAgICJzdG9wIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lc3RhbXAgd2hlbiB0aGUgY2xpZW50IGRpc2Nvbm5lY3RlZCIKICAgICAgICB9LAogICAgICAgICJob3N0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcmVtb3RlIGhvc3QgdGhlIGNsaWVudCBpcyBjb25uZWN0ZWQgZnJvbSIKICAgICAgICB9LAogICAgICAgICJpZCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGludGVybmFsbHkgYXNzaWduZWQgY2xpZW50IElEIGZvciB0aGlzIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAiYWNjIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgYWNjb3VudCB0aGlzIHVzZXIgbG9nZ2VkIGluIHRvIgogICAgICAgIH0sCiAgICAgICAgInVzZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjbGllbnRzIHVzZXJuYW1lIgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIHByZXNlbnRlZCBieSB0aGUgY2xpZW50IGR1cmluZyBjb25uZWN0aW9uIgogICAgICAgIH0sCiAgICAgICAgImxhbmciOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBwcm9ncmFtbWluZyBsYW5ndWFnZSBsaWJyYXJ5IGluIHVzZSBieSB0aGUgY2xpZW50IgogICAgICAgIH0sCiAgICAgICAgInZlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHZlcnNpb24gb2YgdGhlIGNsaWVudCBsaWJyYXJ5IGluIHVzZSIKICAgICAgICB9LAogICAgICAgICJydHQiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsYXN0IGtub3duIGxhdGVuY3kgYmV0d2VlbiB0aGUgTkFUUyBTZXJ2ZXIgYW5kIHRoZSBDbGllbnQiCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.server.advisory.v1.client_disconnect"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9zZXJ2ZXIvYWR2aXNvcnkvdjEvY2xpZW50X2Rpc2Nvbm5lY3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFkdmlzb3J5IHB1Ymxpc2hlZCBhIGNsaWVudCBkaXNjb25uZWN0cyB0byB0aGUgTkFUUyBTZXJ2ZXIiLAogICJ0aXRsZSI6ICJpby5uYXRzLnNlcnZlci5hZHZpc29yeS52MS5jbGllbnRfZGlzY29ubmVjdCIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAiZGVmaW5pdGlvbnMiOiB7CiAgICAiZGF0YXN0YXRzIjogewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJtc2dzIjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG51bWJlciBvZiBtZXNzYWdlcyBoYW5kbGVkIGJ5IHRoZSBjbGllbnQiCiAgICAgICAgfSwKICAgICAgICAiYnl0ZXMiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbnVtYmVyIG9mIGJ5dGVzIGhhbmRsZWQgYnkgdGhlIGNsaWVudCIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAogICJyZXF1aXJlZCI6IFsKICAgICJ0eXBlIiwKICAgICJpZCIsCiAgICAidGltZXN0YW1wIiwKICAgICJzZXJ2ZXIiLAogICAgImNsaWVudCIsCiAgICAic2VudCIsCiAgICAicmVjZWl2ZWQiLAogICAgInJlYXNvbiIKICBdLAogICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5zZXJ2ZXIuYWR2aXNvcnkudjEuY2xpZW50X2Rpc2Nvbm5lY3QiCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInNlcnZlciI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAiZGVzY3JpcHRpb24iOiAiRGV0YWlscyBhYm91dCB0aGUgc2VydmVyIHRoZSBjbGllbnQgY29ubmVjdGVkIHRvIiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJuYW1lIiwKICAgICAgICAiaG9zdCIsCiAgICAgICAgImlkIiwKICAgICAgICAidmVyIiwKICAgICAgICAic2VxIiwKICAgICAgICAiamV0c3RyZWFtIiwKICAgICAgICAidGltZSIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjb25maWd1cmVkIG5hbWUgZm9yIHRoZSBzZXJ2ZXIsIG1hdGNoZXMgSUQgd2hlbiB1bmNvbmZpZ3VyZWQiLAogICAgICAgICAgIm1pbkxlbmd0aCI6IDEKICAgICAgICB9LAogICAgICAgICJob3N0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgaG9zdCB0aGlzIHNlcnZlciBydW5zIG9uLCB0eXBpY2FsbHkgYSBJUCBhZGRyZXNzIgogICAgICAgIH0sCiAgICAgICAgImlkIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIHNlcnZlciBJRCBmb3IgdGhpcyBub2RlIgogICAgICAgIH0sCiAgICAgICAgImNsdXN0ZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjbHVzdGVyIHRoZSBzZXJ2ZXIgYmVsb25ncyB0byIKICAgICAgICB9LAogICAgICAgICJ2ZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB2ZXJzaW9uIE5BVFMgcnVubmluZyBvbiB0aGUgc2VydmVyIgogICAgICAgIH0sCiAgICAgICAgInNlcSI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkludGVybmFsIHNlcnZlciBzZXF1ZW5jZSBJRCIKICAgICAgICB9LAogICAgICAgICJqZXRzdHJlYW0iOiB7CiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgaWYgdGhpcyBzZXJ2ZXIgaGFzIEpldFN0cmVhbSBlbmFibGVkIgogICAgICAgIH0sCiAgICAgICAgInRpbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsb2NhbCB0aW1lIG9mIHRoZSBzZXJ2ZXIiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgImNsaWVudCI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAiZGVzY3JpcHRpb24iOiAiRGV0YWlscyBhYm91dCB0aGUgY2xpZW50IHRoYXQgY29ubmVjdGVkIHRvIHRoZSBzZXJ2ZXIiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImlkIiwKICAgICAgICAiYWNjIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAic3RhcnQiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRpbWVzdGFtcCB3aGVuIHRoZSBjbGllbnQgY29ubmVjdGVkIgogICAgICAgIH0sCiAgICAgICAgInN0b3AiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRpbWVzdGFtcCB3aGVuIHRoZSBjbGllbnQgZGlzY29ubmVjdGVkIgogICAgICAgIH0sCiAgICAgICAgImhvc3QiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSByZW1vdGUgaG9zdCB0aGUgY2xpZW50IGlzIGNvbm5lY3RlZCBmcm9tIgogICAgICAgIH0sCiAgICAgICAgImlkIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgaW50ZXJuYWxseSBhc3NpZ25lZCBjbGllbnQgSUQgZm9yIHRoaXMgY29ubmVjdGlvbiIKICAgICAgICB9LAogICAgICAgICJhY2MiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBhY2NvdW50IHRoaXMgdXNlciBsb2dnZWQgaW4gdG8iCiAgICAgICAgfSwKICAgICAgICAidXNlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNsaWVudHMgdXNlcm5hbWUiCiAgICAgICAgfSwKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgcHJlc2VudGVkIGJ5IHRoZSBjbGllbnQgZHVyaW5nIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAibGFuZyI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHByb2dyYW1taW5nIGxhbmd1YWdlIGxpYnJhcnkgaW4gdXNlIGJ5IHRoZSBjbGllbnQiCiAgICAgICAgfSwKICAgICAgICAidmVyIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdmVyc2lvbiBvZiB0aGUgY2xpZW50IGxpYnJhcnkgaW4gdXNlIgogICAgICAgIH0sCiAgICAgICAgInJ0dCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGxhc3Qga25vd24gbGF0ZW5jeSBiZXR3ZWVuIHRoZSBOQVRTIFNlcnZlciBhbmQgdGhlIENsaWVudCIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAic2VudCI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIkRhdGEgc2VudCB0byB0aGUgY2xpZW50IiwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibXNncyI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBudW1iZXIgb2YgbWVzc2FnZXMgaGFuZGxlZCBieSB0aGUgY2xpZW50IgogICAgICAgIH0sCiAgICAgICAgImJ5dGVzIjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG51bWJlciBvZiBieXRlcyBoYW5kbGVkIGJ5IHRoZSBjbGllbnQiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgInJlY2VpdmVkIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiRGF0YSByZWNlaXZlZCBmcm9tIHRoZSBjbGllbnQiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJtc2dzIjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG51bWJlciBvZiBtZXNzYWdlcyBoYW5kbGVkIGJ5IHRoZSBjbGllbnQiCiAgICAgICAgfSwKICAgICAgICAiYnl0ZXMiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbnVtYmVyIG9mIGJ5dGVzIGhhbmRsZWQgYnkgdGhlIGNsaWVudCIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAicmVhc29uIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHJlYXNvbiB0aGUgY2xpZW50IGRpc2Nvbm5lY3RlZCIKICAgIH0KICB9Cn0K")
	schemas["io.nats.server.metric.v1.service_latency"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9zZXJ2ZXIvbWV0cmljL3YxL3NlcnZpY2VfbGF0ZW5jeS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiTWV0cmljIHB1Ymxpc2hlZCBhYm91dCBzYW1wbGVkIHNlcnZpY2UgcmVxdWVzdHMgc2hvd2luZyByZXF1ZXN0IHN0YXR1cyBhbmQgbGF0ZW5jaWVzIiwKICAidGl0bGUiOiAiaW8ubmF0cy5zZXJ2ZXIubWV0cmljLnYxLnNlcnZpY2VfbGF0ZW5jeSIsCiAgImRlZmluaXRpb25zIjogewogICAgImxhdGVuY3lfY2xpZW50IjogewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAicnR0IiwKICAgICAgICAiaXAiLAogICAgICAgICJjaWQiLAogICAgICAgICJzZXJ2ZXIiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJ1c2VyIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdXNlcm5hbWUgb2YgdGhlIGNvbm5lY3RlZCBjbGllbnQiCiAgICAgICAgfSwKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNvbm5lY3Rpb24gbmFtZSBkZWNsYXJlZCB3aGlsZSBjb25uZWN0aW5nIgogICAgICAgIH0sCiAgICAgICAgInJ0dCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsYXRlbmN5IGJldHdlZW4gdGhlIGNsaWVudCBhbmQgdGhlIHNlcnZlciIKICAgICAgICB9LAogICAgICAgICJpcCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIElQIGFkZHJlc3MgdGhlIGNsaWVudCBpcyBjb25uZWN0aW5nIGZyb20iCiAgICAgICAgfSwKICAgICAgICAiY2lkIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIGNsaWVudCBJRCBhc3NpZ25lZCBieSB0aGUgc2VydmVyIgogICAgICAgIH0sCiAgICAgICAgInNlcnZlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHNlcnZlciBuYW1lIHdoZXJlIHRoZSBjbGllbnQgaXMgY29ubmVjdGVkIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic3RhdHVzIiwKICAgICJzdGFydCIsCiAgICAic2VydmljZSIsCiAgICAic3lzdGVtIiwKICAgICJ0b3RhbCIKICBdLAogICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5zZXJ2ZXIubWV0cmljLnYxLnNlcnZpY2VfbGF0ZW5jeSIKICAgIH0sCiAgICAiaWQiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJVbmlxdWUgY29ycmVsYXRpb24gSUQgZm9yIHRoaXMgZXZlbnQiCiAgICB9LAogICAgInRpbWVzdGFtcCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGhpcyBldmVudCB3YXMgY3JlYXRlZCBpbiBSRkMzMzM5IGZvcm1hdCIKICAgIH0sCiAgICAic3RhdHVzIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzdGF0dXMgb2YgdGhlIHJlcXVlc3QuIDIwMCBPSywgNDAwIEJhZCBSZXF1ZXN0LCBubyByZXBseSBzdWJqZWN0LiA0MDggUmVxdWVzdCBUaW1lb3V0LCByZXF1ZXN0ZXIgbG9zdCBpbnRlcmVzdCBiZWZvcmUgcmVxdWVzdCBjb21wbGV0ZWQuIDUwMyBTZXJ2aWNlIFVuYXZhaWxhYmxlLiA1MDQgU2VydmljZSBUaW1lb3V0LiIsCiAgICAgICJlbnVtIjogWwogICAgICAgIDIwMCwKICAgICAgICA0MDAsCiAgICAgICAgNDA4LAogICAgICAgIDUwMywKICAgICAgICA1MDQKICAgICAgXQogICAgfSwKICAgICJlcnJvciI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkEgZGVzY3JpcHRpb24gb2YgdGhlIHN0YXR1cyBjb2RlIHdoZW4gbm90IDIwMCIKICAgIH0sCiAgICAic3RhcnQiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoZSByZXF1ZXN0IHN0YXJ0ZWQiCiAgICB9LAogICAgInNlcnZpY2UiOiB7CiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGFrZW4gYnkgdGhlIHNlcnZpY2UgdG8gcGVyZm9ybSB0aGUgcmVxdWVzdCBpbiBuYW5vc2Vjb25kcyIKICAgIH0sCiAgICAic3lzdGVtIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRpbWUgc3BlbmQgdHJhdmVyc2luZyB0aGUgTkFUUyBuZXR3b3JrIGluIG5hbm9zZWNvbmRzIgogICAgfSwKICAgICJ0b3RhbCI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgb3ZlcmFsbCByZXF1ZXN0IGR1cmF0aW9uIGluIG5hbm9zZWNvbmRzIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.advisory.v1.api_audit"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvYXBpX2F1ZGl0Lmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBZHZpc29yeSBwdWJsaXNoZWQgd2hlbiB0aGUgSmV0U3RyZWFtIEFQSSBpcyBhY2Nlc3NlZCBhY3Jvc3MgdGhlIG5ldHdvcmsiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5hcGlfYXVkaXQiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInR5cGUiLAogICAgImlkIiwKICAgICJ0aW1lc3RhbXAiLAogICAgInNlcnZlciIsCiAgICAiY2xpZW50IiwKICAgICJzdWJqZWN0IiwKICAgICJyZXNwb25zZSIKICBdLAogICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYWR2aXNvcnkudjEuYXBpX2F1ZGl0IgogICAgfSwKICAgICJpZCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlVuaXF1ZSBjb3JyZWxhdGlvbiBJRCBmb3IgdGhpcyBldmVudCIKICAgIH0sCiAgICAidGltZXN0YW1wIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdGltZSB0aGlzIGV2ZW50IHdhcyBjcmVhdGVkIGluIFJGQzMzMzkgZm9ybWF0IgogICAgfSwKICAgICJzZXJ2ZXIiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VydmVyIHRoaXMgZXZlbnQgb3JpZ2luYXRlcyBmcm9tLCBlaXRoZXIgYSBnZW5lcmF0ZWQgSUQgb3IgdGhlIGNvbmZpZ3VyZWQgbmFtZSIsCiAgICAgICJtaW5MZW5ndGgiOiAxCiAgICB9LAogICAgInN1YmplY3QiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc3ViamVjdCB0aGUgYWRtaW4gQVBJIHJlcXVlc3Qgd2FzIHJlY2VpdmVkIG9uIiwKICAgICAgIm1pbkxlbmd0aCI6IDEKICAgIH0sCiAgICAicmVzcG9uc2UiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgZnVsbCB1bnBhcnNlZCBib2R5IG9mIHRoZSByZXNwb25zZSBzZW50IHRvIHRoZSBjYWxsZXIiCiAgICB9LAogICAgInJlcXVlc3QiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgZnVsbCB1bnBhcnNlZCBib2R5IG9mIHRoZSByZXF1ZXN0IHJlY2VpdmVkIGZyb20gdGhlIGNsaWVudCIKICAgIH0sCiAgICAiY2xpZW50IjogewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImhvc3QiLAogICAgICAgICJwb3J0IiwKICAgICAgICAiY2lkIiwKICAgICAgICAiYWNjb3VudCIKICAgICAgXSwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiaG9zdCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIElQIGFkZHJlc3Mgd2hlcmUgdGhlIGNsaWVudCBjb25uZWN0cyBmcm9tIgogICAgICAgIH0sCiAgICAgICAgInBvcnQiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcG9ydCBudW1iZXIgd2hlcmUgdGhlIGNsaWVudCBjb25uZWN0cyBmcm9tIgogICAgICAgIH0sCiAgICAgICAgImNpZCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB1bmlxdWUgY2xpZW50IElEIHRoZSBzZXJ2ZXIgYXNzaWduZWQgdG8gdGhlIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAiYWNjb3VudCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGFjY291bnQgdGhlIHVzZXIgYmVsb25ncyB0byIKICAgICAgICB9LAogICAgICAgICJ1c2VyIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdXNlcm5hbWUgdGhhdCB3YXMgdXNlZCBkdXJpbmcgYXV0aGVudGljYXRpb24sIGlmIGFueSIKICAgICAgICB9LAogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSB0aGUgY2xpZW50IGFzc2lnbmVkIHRvIHRoZSBjb25uZWN0aW9uIGR1cmluZyBjb25uZWN0aW9uIG5lZ290aWF0aW9uIgogICAgICAgIH0sCiAgICAgICAgImxhbmd1YWdlIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgY2xpZW50IGxpYnJhcnkgbGFuZ3VhZ2UgdXNlZCB0byBjcmVhdGUgdGhlIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAidmVyc2lvbiI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHZlcnNpb24gY2xpZW50IGxpYnJhcnkgdXNlZCB0byBjcmVhdGUgdGhlIGNvbm5lY3Rpb24iCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.advisory.v1.max_deliver"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvbWF4X2RlbGl2ZXIuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFkdmlzb3J5IHB1Ymxpc2hlZCB3aGVuIGEgbWVzc2FnZSBoYXZlIHJlYWNoZWQgaXRzIG1heGltdW0gZGVsaXZlcnkgYXR0ZW1wdHMiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5tYXhfZGVsaXZlciIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic3RyZWFtIiwKICAgICJjb25zdW1lciIsCiAgICAic3RyZWFtX3NlcSIsCiAgICAiZGVsaXZlcmllcyIKICBdLAogICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYWR2aXNvcnkudjEubWF4X2RlbGl2ZXIiCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInN0cmVhbSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBzdHJlYW0gd2hlcmUgdGhlIG1lc3NhZ2UgaXMgc3RvcmVkIgogICAgfSwKICAgICJjb25zdW1lciI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBjb25zdW1lciB3aGVyZSB0aGUgbWVzc2FnZSByZWFjaGVkIGl0cyBsaW1pdCIKICAgIH0sCiAgICAic3RyZWFtX3NlcSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgIm1pbmltdW0iOiAxLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHNlcXVlbmNlIG9mIHRoZSBtZXNzYWdlIGluIHRoZSBzdHJlYW0gdGhhdCBmYWlsZWQiCiAgICB9LAogICAgImRlbGl2ZXJpZXMiOiB7CiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAibWluaW11bSI6IDEsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbnVtYmVyIG9mIGRlbGl2ZXJpZXMgdGhhdCB3ZXJlIGF0dGVtcHRlZCIKICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.metric.v1.consumer_ack"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vbWV0cmljL3YxL2NvbnN1bWVyX2Fjay5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiTWV0cmljIHB1Ymxpc2hlZCB3aGVuIGEgbWVzc2FnZSB3YXMgYWNrbm93bGVkZ2VkIHRvIGEgY29uc3VtZXIgd2l0aCBBY2sgU2FtcGxpbmcgZW5hYmxlZCIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLm1ldHJpYy52MS5jb25zdW1lcl9hY2siLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInR5cGUiLAogICAgImlkIiwKICAgICJ0aW1lc3RhbXAiLAogICAgInN0cmVhbSIsCiAgICAiY29uc3VtZXIiLAogICAgInN0cmVhbV9zZXEiLAogICAgImNvbnN1bWVyX3NlcSIsCiAgICAiYWNrX3RpbWUiLAogICAgImRlbGl2ZXJpZXMiCiAgXSwKICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLm1ldHJpYy52MS5jb25zdW1lcl9hY2siCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInN0cmVhbSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBzdHJlYW0gd2hlcmUgdGhlIG1lc3NhZ2UgaXMgc3RvcmVkIgogICAgfSwKICAgICJjb25zdW1lciI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBjb25zdW1lciB3aGVyZSB0aGUgbWVzc2FnZSBpcyBoZWxkIgogICAgfSwKICAgICJzdHJlYW1fc2VxIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAxLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHNlcXVlbmNlIG9mIHRoZSBtZXNzYWdlIGluIHRoZSBzdHJlYW0gdGhhdCB3ZXJlIGFja25vd2xlZGdlZCIKICAgIH0sCiAgICAiY29uc3VtZXJfc2VxIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAxLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHNlcXVlbmNlIG9mIHRoZSBtZXNzYWdlIGluIHRoZSBjb25zdW1lciB0aGF0IHdlcmUgYWNrbm93bGVkZ2VkIgogICAgfSwKICAgICJhY2tfdGltZSI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogMSwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIGl0IHRvb2sgb24gdGhlIGZpbmFsIGRlbGl2ZXJ5IGZvciB0aGUgbWVzc2FnZSB0byBiZSBhY2tub3dsZWRnZWQgaW4gbmFub3NlY29uZHMiCiAgICB9LAogICAgImRlbGl2ZXJpZXMiOiB7CiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAibWluaW11bSI6IDEsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbnVtYmVyIG9mIGRlbGl2ZXJpZXMgdGhhdCB3ZXJlIGF0dGVtcHRlZCBiZWZvcmUgYmVpbmcgYWNrbm93bGVkZ2VkIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.consumer_configuration"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX2NvbmZpZ3VyYXRpb24uanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIlRoZSBkYXRhIHN0cnVjdHVyZSB0aGF0IGRlc2NyaWJlIHRoZSBjb25maWd1cmF0aW9uIG9mIGEgTkFUUyBKZXRTdHJlYW0gQ29uc3VtZXIiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuY29uc3VtZXJfY29uZmlndXJhdGlvbiIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAiZGVsaXZlcl9wb2xpY3kiLAogICAgImFja19wb2xpY3kiLAogICAgInJlcGxheV9wb2xpY3kiCiAgXSwKICAiYWxsT2YiOiBbCiAgICB7CiAgICAgICJvbmVPZiI6IFsKICAgICAgICB7CiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAiYWxsIgogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgImxhc3QiCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAibmV3IgogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiLAogICAgICAgICAgICAib3B0X3N0YXJ0X3NlcSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAiYnlfc3RhcnRfc2VxdWVuY2UiCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICAib3B0X3N0YXJ0X3NlcSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiLAogICAgICAgICAgICAib3B0X3N0YXJ0X3RpbWUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgImJ5X3N0YXJ0X3RpbWUiCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICAib3B0X3N0YXJ0X3RpbWUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAiZHVyYWJsZV9uYW1lIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiQSB1bmlxdWUgbmFtZSBmb3IgYSBkdXJhYmxlIGNvbnN1bWVyIiwKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgInBhdHRlcm4iOiAiXlteLio+XSskIiwKICAgICAgIm1pbkxlbmd0aCI6IDEKICAgIH0sCiAgICAiZGVsaXZlcl9zdWJqZWN0IjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAibWluTGVuZ3RoIjogMQogICAgfSwKICAgICJhY2tfcG9saWN5IjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAibm9uZSIsCiAgICAgICAgImFsbCIsCiAgICAgICAgImV4cGxpY2l0IgogICAgICBdCiAgICB9LAogICAgImFja193YWl0IjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAxCiAgICB9LAogICAgIm1heF9kZWxpdmVyIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAtMQogICAgfSwKICAgICJmaWx0ZXJfc3ViamVjdCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgfSwKICAgICJyZXBsYXlfcG9saWN5IjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAiaW5zdGFudCIsCiAgICAgICAgIm9yaWdpbmFsIgogICAgICBdCiAgICB9LAogICAgInNhbXBsZV9mcmVxIjogewogICAgICAidHlwZSI6ICJzdHJpbmciCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_configuration"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9jb25maWd1cmF0aW9uLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGUgZGF0YSBzdHJ1Y3R1cmUgdGhhdCBkZXNjcmliZSB0aGUgY29uZmlndXJhdGlvbiBvZiBhIE5BVFMgSmV0U3RyZWFtIFN0cmVhbSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fY29uZmlndXJhdGlvbiIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAicmV0ZW50aW9uIiwKICAgICJtYXhfY29uc3VtZXJzIiwKICAgICJtYXhfbXNncyIsCiAgICAibWF4X2J5dGVzIiwKICAgICJtYXhfYWdlIiwKICAgICJzdG9yYWdlIiwKICAgICJudW1fcmVwbGljYXMiCiAgXSwKICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgInByb3BlcnRpZXMiOiB7CiAgICAibmFtZSI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIkEgdW5pcXVlIG5hbWUgZm9yIHRoZSBTdHJlYW0sIGVtcHR5IGZvciBTdHJlYW0gVGVtcGxhdGVzLiIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJwYXR0ZXJuIjogIl5bXi4qPl0qJCIsCiAgICAgICJtaW5MZW5ndGgiOiAwCiAgICB9LAogICAgInN1YmplY3RzIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiQSBsaXN0IG9mIHN1YmplY3RzIHRvIGNvbnN1bWUsIHN1cHBvcnRzIHdpbGRjYXJkcy4iLAogICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICJtaW5MZW5ndGgiOiAxLAogICAgICAiaXRlbXMiOiB7CiAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAibWluTGVuZ3RoIjogMQogICAgICB9CiAgICB9LAogICAgInJldGVudGlvbiI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBtZXNzYWdlcyBhcmUgcmV0YWluZWQgaW4gdGhlIFN0cmVhbSwgb25jZSB0aGlzIGlzIGV4Y2VlZGVkIG9sZCBtZXNzYWdlcyBhcmUgcmVtb3ZlZC4iLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAibGltaXRzIiwKICAgICAgICAiaW50ZXJlc3QiLAogICAgICAgICJ3b3JrcXVldWUiCiAgICAgIF0sCiAgICAgICJkZWZhdWx0IjogImxpbWl0cyIKICAgIH0sCiAgICAibWF4X2NvbnN1bWVycyI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBtYW55IENvbnN1bWVycyBjYW4gYmUgZGVmaW5lZCBmb3IgYSBnaXZlbiBTdHJlYW0uIC0xIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogLTEsCiAgICAgICJkZWZhdWx0IjogLTEKICAgIH0sCiAgICAibWF4X21zZ3MiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSBtZXNzYWdlcyBtYXkgYmUgaW4gYSBTdHJlYW0sIG9sZGVzdCBtZXNzYWdlcyB3aWxsIGJlIHJlbW92ZWQgaWYgdGhlIFN0cmVhbSBleGNlZWRzIHRoaXMgc2l6ZS4gLTEgZm9yIHVubGltaXRlZC4iLAogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAtMSwKICAgICAgImRlZmF1bHQiOiAtMQogICAgfSwKICAgICJtYXhfYnl0ZXMiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgYmlnIHRoZSBTdHJlYW0gbWF5IGJlLCB3aGVuIHRoZSBjb21iaW5lZCBzdHJlYW0gc2l6ZSBleGNlZWRzIHRoaXMgb2xkIG1lc3NhZ2VzIGFyZSByZW1vdmVkLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAibWluaW11bSI6IC0xLAogICAgICAiZGVmYXVsdCI6IC0xCiAgICB9LAogICAgIm1heF9hZ2UiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJNYXhpbXVtIGFnZSBvZiBhbnkgbWVzc2FnZSBpbiB0aGUgc3RyZWFtLCBleHByZXNzZWQgaW4gbWljcm9zZWNvbmRzLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAibWluaW11bSI6IDAsCiAgICAgICJkZWZhdWx0IjogMAogICAgfSwKICAgICJtYXhfbXNnX3NpemUiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbGFyZ2VzdCBtZXNzYWdlIHRoYXQgd2lsbCBiZSBhY2NlcHRlZCBieSB0aGUgU3RyZWFtLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAibWluaW11bSI6IC0xLAogICAgICAiZGVmYXVsdCI6IC0xCiAgICB9LAogICAgInN0b3JhZ2UiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc3RvcmFnZSBiYWNrZW5kIHRvIHVzZSBmb3IgdGhlIFN0cmVhbS4iLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAiZmlsZSIsCiAgICAgICAgIm1lbW9yeSIKICAgICAgXSwKICAgICAgImRlZmF1bHQiOiAibWVtb3J5IgogICAgfSwKICAgICJudW1fcmVwbGljYXMiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSByZXBsaWNhcyB0byBrZWVwIGZvciBlYWNoIG1lc3NhZ2UuIiwKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogMSwKICAgICAgImRlZmF1bHQiOiAxCiAgICB9LAogICAgIm5vX2FjayI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIkRpc2FibGVzIGFja25vd2xlZGdpbmcgbWVzc2FnZXMgdGhhdCBhcmUgcmVjZWl2ZWQgYnkgdGhlIFN0cmVhbS4iLAogICAgICAidHlwZSI6ICJib29sZWFuIiwKICAgICAgImRlZmF1bHQiOiBmYWxzZQogICAgfSwKICAgICJ0ZW1wbGF0ZV9vd25lciI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIldoZW4gdGhlIFN0cmVhbSBpcyBtYW5hZ2VkIGJ5IGEgU3RyZWFtIFRlbXBsYXRlIHRoaXMgaWRlbnRpZmllcyB0aGUgdGVtcGxhdGUgdGhhdCBtYW5hZ2VzIHRoZSBTdHJlYW0uIiwKICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgfSwKICAgICJkaXNjYXJkIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiV2hlbiBhIFN0cmVhbSByZWFjaCBpdCdzIGxpbWl0cyBlaXRoZXIgb2xkIG1lc3NhZ2VzIGFyZSBkZWxldGVkIG9yIG5ldyBvbmVzIGFyZSBkZW5pZWQiLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAib2xkIiwKICAgICAgICAibmV3IgogICAgICBdLAogICAgICAiZGVmYXVsdCI6ICJvbGQiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_template_configuration"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV90ZW1wbGF0ZV9jb25maWd1cmF0aW9uLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGUgZGF0YSBzdHJ1Y3R1cmUgdGhhdCBkZXNjcmliZSB0aGUgY29uZmlndXJhdGlvbiBvZiBhIE5BVFMgSmV0U3RyZWFtIFN0cmVhbSBUZW1wbGF0ZSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fdGVtcGxhdGVfY29uZmlndXJhdGlvbiIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAibmFtZSIsCiAgICAiY29uZmlnIiwKICAgICJtYXhfc3RyZWFtcyIKICBdLAogICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJuYW1lIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiQSB1bmlxdWUgbmFtZSBmb3IgdGhlIFN0cmVhbSBUZW1wbGF0ZS4iLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAicGF0dGVybiI6ICJeW14uKj5dKyQiLAogICAgICAibWluTGVuZ3RoIjogMQogICAgfSwKICAgICJtYXhfc3RyZWFtcyI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBtYXhpbXVtIG51bWJlciBvZiBTdHJlYW1zIHRoaXMgVGVtcGxhdGUgY2FuIGNyZWF0ZSwgLTEgZm9yIHVubGltaXRlZC4iLAogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAtMSwKICAgICAgImRlZmF1bHQiOiAtMQogICAgfSwKICAgICJjb25maWciOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAicmV0ZW50aW9uIiwKICAgICAgICAibWF4X2NvbnN1bWVycyIsCiAgICAgICAgIm1heF9tc2dzIiwKICAgICAgICAibWF4X2J5dGVzIiwKICAgICAgICAibWF4X2FnZSIsCiAgICAgICAgInN0b3JhZ2UiLAogICAgICAgICJudW1fcmVwbGljYXMiCiAgICAgIF0sCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSB1bmlxdWUgbmFtZSBmb3IgdGhlIFN0cmVhbSwgZW1wdHkgZm9yIFN0cmVhbSBUZW1wbGF0ZXMuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAicGF0dGVybiI6ICJeW14uKj5dKiQiLAogICAgICAgICAgIm1pbkxlbmd0aCI6IDAKICAgICAgICB9LAogICAgICAgICJzdWJqZWN0cyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIGxpc3Qgb2Ygc3ViamVjdHMgdG8gY29uc3VtZSwgc3VwcG9ydHMgd2lsZGNhcmRzLiIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAibWluTGVuZ3RoIjogMSwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgIm1pbkxlbmd0aCI6IDEKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJyZXRlbnRpb24iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSG93IG1lc3NhZ2VzIGFyZSByZXRhaW5lZCBpbiB0aGUgU3RyZWFtLCBvbmNlIHRoaXMgaXMgZXhjZWVkZWQgb2xkIG1lc3NhZ2VzIGFyZSByZW1vdmVkLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICJsaW1pdHMiLAogICAgICAgICAgICAiaW50ZXJlc3QiLAogICAgICAgICAgICAid29ya3F1ZXVlIgogICAgICAgICAgXSwKICAgICAgICAgICJkZWZhdWx0IjogImxpbWl0cyIKICAgICAgICB9LAogICAgICAgICJtYXhfY29uc3VtZXJzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBtYW55IENvbnN1bWVycyBjYW4gYmUgZGVmaW5lZCBmb3IgYSBnaXZlbiBTdHJlYW0uIC0xIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAtMSwKICAgICAgICAgICJkZWZhdWx0IjogLTEKICAgICAgICB9LAogICAgICAgICJtYXhfbXNncyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSBtZXNzYWdlcyBtYXkgYmUgaW4gYSBTdHJlYW0sIG9sZGVzdCBtZXNzYWdlcyB3aWxsIGJlIHJlbW92ZWQgaWYgdGhlIFN0cmVhbSBleGNlZWRzIHRoaXMgc2l6ZS4gLTEgZm9yIHVubGltaXRlZC4iLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IC0xLAogICAgICAgICAgImRlZmF1bHQiOiAtMQogICAgICAgIH0sCiAgICAgICAgIm1heF9ieXRlcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgYmlnIHRoZSBTdHJlYW0gbWF5IGJlLCB3aGVuIHRoZSBjb21iaW5lZCBzdHJlYW0gc2l6ZSBleGNlZWRzIHRoaXMgb2xkIG1lc3NhZ2VzIGFyZSByZW1vdmVkLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogLTEsCiAgICAgICAgICAiZGVmYXVsdCI6IC0xCiAgICAgICAgfSwKICAgICAgICAibWF4X2FnZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJNYXhpbXVtIGFnZSBvZiBhbnkgbWVzc2FnZSBpbiB0aGUgc3RyZWFtLCBleHByZXNzZWQgaW4gbWljcm9zZWNvbmRzLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMCwKICAgICAgICAgICJkZWZhdWx0IjogMAogICAgICAgIH0sCiAgICAgICAgIm1heF9tc2dfc2l6ZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbGFyZ2VzdCBtZXNzYWdlIHRoYXQgd2lsbCBiZSBhY2NlcHRlZCBieSB0aGUgU3RyZWFtLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogLTEsCiAgICAgICAgICAiZGVmYXVsdCI6IC0xCiAgICAgICAgfSwKICAgICAgICAic3RvcmFnZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc3RvcmFnZSBiYWNrZW5kIHRvIHVzZSBmb3IgdGhlIFN0cmVhbS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAiZmlsZSIsCiAgICAgICAgICAgICJtZW1vcnkiCiAgICAgICAgICBdLAogICAgICAgICAgImRlZmF1bHQiOiAibWVtb3J5IgogICAgICAgIH0sCiAgICAgICAgIm51bV9yZXBsaWNhcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSByZXBsaWNhcyB0byBrZWVwIGZvciBlYWNoIG1lc3NhZ2UuIiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAxLAogICAgICAgICAgImRlZmF1bHQiOiAxCiAgICAgICAgfSwKICAgICAgICAibm9fYWNrIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRpc2FibGVzIGFja25vd2xlZGdpbmcgbWVzc2FnZXMgdGhhdCBhcmUgcmVjZWl2ZWQgYnkgdGhlIFN0cmVhbS4iLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIsCiAgICAgICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAidGVtcGxhdGVfb3duZXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiV2hlbiB0aGUgU3RyZWFtIGlzIG1hbmFnZWQgYnkgYSBTdHJlYW0gVGVtcGxhdGUgdGhpcyBpZGVudGlmaWVzIHRoZSB0ZW1wbGF0ZSB0aGF0IG1hbmFnZXMgdGhlIFN0cmVhbS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImRpc2NhcmQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiV2hlbiBhIFN0cmVhbSByZWFjaCBpdCdzIGxpbWl0cyBlaXRoZXIgb2xkIG1lc3NhZ2VzIGFyZSBkZWxldGVkIG9yIG5ldyBvbmVzIGFyZSBkZW5pZWQiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAib2xkIiwKICAgICAgICAgICAgIm5ldyIKICAgICAgICAgIF0sCiAgICAgICAgICAiZGVmYXVsdCI6ICJvbGQiCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.account_info_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2FjY291bnRfaW5mb19yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5JTkZPIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5hY2NvdW50X2luZm9fcmVzcG9uc2UiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInR5cGUiCiAgXSwKICAib25lT2YiOiBbCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJtZW1vcnkiLAogICAgICAgICJzdG9yYWdlIiwKICAgICAgICAic3RyZWFtcyIsCiAgICAgICAgImxpbWl0cyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm1lbW9yeSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJNZW1vcnkgU3RvcmFnZSBiZWluZyB1c2VkIGZvciBTdHJlYW0gTWVzc2FnZSBzdG9yYWdlIiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfSwKICAgICAgICAic3RvcmFnZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJGaWxlIFN0b3JhZ2UgYmVpbmcgdXNlZCBmb3IgU3RyZWFtIE1lc3NhZ2Ugc3RvcmFnZSIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0sCiAgICAgICAgInN0cmVhbXMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTnVtYmVyIG9mIGFjdGl2ZSBTdHJlYW1zIiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfSwKICAgICAgICAibGltaXRzIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgIm1heF9jb25zdW1lcnMiLAogICAgICAgICAgICAibWF4X21lbW9yeSIsCiAgICAgICAgICAgICJtYXhfc3RvcmFnZSIsCiAgICAgICAgICAgICJtYXhfc3RyZWFtcyIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgIm1heF9tZW1vcnkiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBtYXhpbXVtIGFtb3VudCBvZiBNZW1vcnkgc3RvcmFnZSBTdHJlYW0gTWVzc2FnZXMgbWF5IGNvbnN1bWUiLAogICAgICAgICAgICAgICJtaW5pbXVtIjogLTEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIm1heF9zdG9yYWdlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbWF4aW11bSBhbW91bnQgb2YgRmlsZSBzdG9yYWdlIFN0cmVhbSBNZXNzYWdlcyBtYXkgY29uc3VtZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAtMQogICAgICAgICAgICB9LAogICAgICAgICAgICAibWF4X3N0cmVhbXMiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBtYXhpbXVtIG51bWJlciBvZiBTdHJlYW1zIGFuIGFjY291bnQgY2FuIGNyZWF0ZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAtMQogICAgICAgICAgICB9LAogICAgICAgICAgICAibWF4X2NvbnN1bWVycyI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIENvbnN1bWVyIGFuIGFjY291bnQgY2FuIGNyZWF0ZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAtMQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZXJyb3IiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJlcnJvciI6IHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJjb2RlIgogICAgICAgICAgXSwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSFRUUCBsaWtlIGVycm9yIGNvZGUgaW4gdGhlIDMwMCB0byA1MDAgcmFuZ2UiLAogICAgICAgICAgICAgICJtaW5pbXVtIjogMzAwLAogICAgICAgICAgICAgICJtYXhpbXVtIjogNjk5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIGh1bWFuIGZyaWVuZGx5IGRlc2NyaXB0aW9uIG9mIHRoZSBlcnJvciIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5hY2NvdW50X2luZm9fcmVzcG9uc2UiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.consumer_create_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX2NyZWF0ZV9yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5DT05TVU1FUi5DUkVBVEUgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLmNvbnN1bWVyX2NyZWF0ZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJzdHJlYW1fbmFtZSIsCiAgICAgICAgIm5hbWUiLAogICAgICAgICJjb25maWciLAogICAgICAgICJjcmVhdGVkIiwKICAgICAgICAiZGVsaXZlcmVkIiwKICAgICAgICAiYWNrX2Zsb29yIiwKICAgICAgICAibnVtX3BlbmRpbmciLAogICAgICAgICJudW1fcmVkZWxpdmVyZWQiCiAgICAgIF0sCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN0cmVhbV9uYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgU3RyZWFtIHRoZSBjb25zdW1lciBiZWxvbmdzIHRvIgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgdW5pcXVlIG5hbWUgZm9yIHRoZSBjb25zdW1lciwgZWl0aGVyIG1hY2hpbmUgZ2VuZXJhdGVkIG9yIHRoZSBkdXJhYmxlIG5hbWUiCiAgICAgICAgfSwKICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiLAogICAgICAgICAgICAiYWNrX3BvbGljeSIsCiAgICAgICAgICAgICJyZXBsYXlfcG9saWN5IgogICAgICAgICAgXSwKICAgICAgICAgICJhbGxPZiI6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgICJvbmVPZiI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSIKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgICAgICAgICAiYWxsIgogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSIKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgICAgICAgICAibGFzdCIKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSI6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgICAgICAgICAiZW51bSI6IFsKICAgICAgICAgICAgICAgICAgICAgICAgIm5ldyIKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiLAogICAgICAgICAgICAgICAgICAgICJvcHRfc3RhcnRfc2VxIgogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiOiB7CiAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICJieV9zdGFydF9zZXF1ZW5jZSIKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJvcHRfc3RhcnRfc2VxIjogewogICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiLAogICAgICAgICAgICAgICAgICAgICJvcHRfc3RhcnRfdGltZSIKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgICAgICAgICAiYnlfc3RhcnRfdGltZSIKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICJvcHRfc3RhcnRfdGltZSI6IHsKICAgICAgICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImR1cmFibGVfbmFtZSI6IHsKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSB1bmlxdWUgbmFtZSBmb3IgYSBkdXJhYmxlIGNvbnN1bWVyIiwKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJwYXR0ZXJuIjogIl5bXi4qPl0rJCIsCiAgICAgICAgICAgICAgIm1pbkxlbmd0aCI6IDEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlbGl2ZXJfc3ViamVjdCI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJtaW5MZW5ndGgiOiAxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhY2tfcG9saWN5IjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAibm9uZSIsCiAgICAgICAgICAgICAgICAiYWxsIiwKICAgICAgICAgICAgICAgICJleHBsaWNpdCIKICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhY2tfd2FpdCI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIm1heF9kZWxpdmVyIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJtaW5pbXVtIjogLTEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImZpbHRlcl9zdWJqZWN0IjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInJlcGxheV9wb2xpY3kiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZW51bSI6IFsKICAgICAgICAgICAgICAgICJpbnN0YW50IiwKICAgICAgICAgICAgICAgICJvcmlnaW5hbCIKICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJzYW1wbGVfZnJlcSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJjcmVhdGVkIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIgogICAgICAgIH0sCiAgICAgICAgImRlbGl2ZXJlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbGFzdCBtZXNzYWdlIGRlbGl2ZXJlZCBmcm9tIHRoaXMgQ29uc3VtZXIiLAogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvbnN1bWVyX3NlcSIsCiAgICAgICAgICAgICJzdHJlYW1fc2VxIgogICAgICAgICAgXSwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiY29uc3VtZXJfc2VxIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VxdWVuY2UgbnVtYmVyIG9mIHRoZSBDb25zdW1lciIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJzdHJlYW1fc2VxIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VxdWVuY2UgbnVtYmVyIG9mIHRoZSBTdHJlYW0iLAogICAgICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAiYWNrX2Zsb29yIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBoaWdoZXN0IGNvbnRpZ3VvdXMgYWNrbm93bGVkZ2VkIG1lc3NhZ2UiLAogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvbnN1bWVyX3NlcSIsCiAgICAgICAgICAgICJzdHJlYW1fc2VxIgogICAgICAgICAgXSwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiY29uc3VtZXJfc2VxIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VxdWVuY2UgbnVtYmVyIG9mIHRoZSBDb25zdW1lciIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJzdHJlYW1fc2VxIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VxdWVuY2UgbnVtYmVyIG9mIHRoZSBTdHJlYW0iLAogICAgICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAibnVtX3BlbmRpbmciOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG51bWJlciBvZiBtZXNzYWdlcyBwZW5kaW5nIGFja25vd2xlZGdlbWVudCIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0sCiAgICAgICAgIm51bV9yZWRlbGl2ZXJlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbnVtYmVyIG9mIHJlZGVsaXZlcmllcyB0aGF0IGhhdmUgYmVlbiBwZXJmb3JtZWQiLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLmNvbnN1bWVyX2NyZWF0ZV9yZXNwb25zZSIKICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.api.v1.consumer_delete_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX2RlbGV0ZV9yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5DT05TVU1FUi5ERUxFVEUgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLmNvbnN1bWVyX2RlbGV0ZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic3VjY2VzcyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN1Y2Nlc3MiOiB7CiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5jb25zdW1lcl9kZWxldGVfcmVzcG9uc2UiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.consumer_info_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.consumer_list_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX2xpc3RfcmVxdWVzdC5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXF1ZXN0IHRvIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5DT05TVU1FUi5MSVNUIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5jb25zdW1lcl9saXN0X3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAib2Zmc2V0IgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAib2Zmc2V0IjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdCn0K")
	schemas["io.nats.jetstream.api.v1.consumer_list_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.consumer_names_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX25hbWVzX3JlcXVlc3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVxdWVzdCB0byB0aGUgSmV0U3RyZWFtICRKUy5BUEkuQ09OU1VNRVIuTkFNRVMgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLmNvbnN1bWVyX25hbWVzX3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAib2Zmc2V0IgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAib2Zmc2V0IjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdCn0K")
	schemas["io.nats.jetstream.api.v1.consumer_names_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX25hbWVzX3Jlc3BvbnNlLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlc3BvbnNlIGZyb20gdGhlIEpldFN0cmVhbSAkSlMuQVBJLkNPTlNVTUVSLk5BTUVTIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5jb25zdW1lcl9uYW1lc19yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJhbGxPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInRvdGFsIiwKICAgICAgICAib2Zmc2V0IiwKICAgICAgICAibGltaXQiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJ0b3RhbCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfSwKICAgICAgICAib2Zmc2V0IjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9LAogICAgICAgICJsaW1pdCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXSwKICAib25lT2YiOiBbCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiY29uc3VtZXJzIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY29uc3VtZXJzIjogewogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLmNvbnN1bWVyX25hbWVzX3Jlc3BvbnNlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_create_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_delete_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9kZWxldGVfcmVzcG9uc2UuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVzcG9uc2UgZnJvbSB0aGUgSmV0U3RyZWFtICRKUy5BUEkuU1RSRUFNLkRFTEVURSBBUEkiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX2RlbGV0ZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic3VjY2VzcyIKICAgICAgXSwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN1Y2Nlc3MiOiB7CiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fZGVsZXRlX3Jlc3BvbnNlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_info_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_list_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9saXN0X3JlcXVlc3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVxdWVzdCB0byB0aGUgSmV0U3RyZWFtICRKUy5BUEkuU1RSRUFNLkxJU1QgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9saXN0X3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAib2Zmc2V0IgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAib2Zmc2V0IjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdCn0K")
	schemas["io.nats.jetstream.api.v1.stream_list_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_msg_delete_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9tc2dfZGVsZXRlX3Jlc3BvbnNlLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlc3BvbnNlIGZyb20gdGhlIEpldFN0cmVhbSAkSlMuQVBJLlNUUkVBTS5NU0cuREVMRVRFIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fbXNnX2RlbGV0ZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJzdWNjZXNzIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAic3VjY2VzcyI6IHsKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9tc2dfZGVsZXRlX3Jlc3BvbnNlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_msg_get_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9tc2dfZ2V0X3JlcXVlc3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVxdWVzdCB0byB0aGUgSmV0U3RyZWFtICRKUy5BUEkuU1RSRUFNLk1TRy5HRVQgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9tc2dfZ2V0X3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInNlcSIKICBdLAogICJwcm9wZXJ0aWVzIjogewogICAgInNlcSI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJTdHJlYW0gc2VxdWVuY2UgbnVtYmVyIG9mIHRoZSBtZXNzYWdlIHRvIHJldHJpZXZlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_msg_get_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9tc2dfZ2V0X3Jlc3BvbnNlLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlc3BvbnNlIGZyb20gdGhlIEpldFN0cmVhbSAkSlMuQVBJLlNUUkVBTS5NU0cuR0VUIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fbXNnX2dldF9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJtZXNzYWdlIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibWVzc2FnZSI6IHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJzdWJqZWN0IiwKICAgICAgICAgICAgInNlcSIsCiAgICAgICAgICAgICJkYXRhIiwKICAgICAgICAgICAgInRpbWUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJzdWJqZWN0IjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzdWJqZWN0IHRoZSBtZXNzYWdlIHdhcyBvcmlnaW5hbGx5IHJlY2VpdmVkIG9uIiwKICAgICAgICAgICAgICAibWluTGVuZ3RoIjogMQogICAgICAgICAgICB9LAogICAgICAgICAgICAic2VxIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VxdWVuY2UgbnVtYmVyIG9mIHRoZSBtZXNzYWdlIGluIHRoZSBTdHJlYW0iLAogICAgICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgYmFzZTY0IGVuY29kZWQgcGF5bG9hZCBvZiB0aGUgbWVzc2FnZSBib2R5IiwKICAgICAgICAgICAgICAibWluTGVuZ3RoIjogMAogICAgICAgICAgICB9LAogICAgICAgICAgICAidGltZSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdGltZSB0aGUgbWVzc2FnZSB3YXMgcmVjZWl2ZWQiLAogICAgICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9tc2dfZ2V0X3Jlc3BvbnNlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_names_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9uYW1lc19yZXF1ZXN0Lmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlcXVlc3QgdG8gdGhlIEpldFN0cmVhbSAkSlMuQVBJLlNUUkVBTS5OQU1FUyBBUEkiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX25hbWVzX3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAib2Zmc2V0IgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAib2Zmc2V0IjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdCn0K")
	schemas["io.nats.jetstream.api.v1.stream_names_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9uYW1lc19yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5TVFJFQU0uTkFNRVMgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9uYW1lc19yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJhbGxPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInRvdGFsIiwKICAgICAgICAib2Zmc2V0IiwKICAgICAgICAibGltaXQiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJ0b3RhbCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfSwKICAgICAgICAib2Zmc2V0IjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9LAogICAgICAgICJsaW1pdCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXSwKICAib25lT2YiOiBbCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic3RyZWFtcyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvbnN1bWVycyI6IHsKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fbmFtZXNfcmVzcG9uc2UiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_purge_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9wdXJnZV9yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5TVFJFQU0uUFVSR0UgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9wdXJnZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic3VjY2VzcyIsCiAgICAgICAgInB1cmdlZCIKICAgICAgXSwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN1Y2Nlc3MiOiB7CiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0sCiAgICAgICAgInB1cmdlZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJOdW1iZXIgb2YgbWVzc2FnZXMgcHVyZ2VkIGZyb20gdGhlIFN0cmVhbSIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fcHVyZ2VfcmVzcG9uc2UiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_template_create_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_template_delete_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV90ZW1wbGF0ZV9kZWxldGVfcmVzcG9uc2UuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVzcG9uc2UgZnJvbSB0aGUgSmV0U3RyZWFtICRKUy5BUEkuU1RSRUFNLlRFTVBMQVRFLkRFTEVURSBBUEkiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX3RlbXBsYXRlX2RlbGV0ZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic3VjY2VzcyIKICAgICAgXSwKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN1Y2Nlc3MiOiB7CiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIgogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fdGVtcGxhdGVfZGVsZXRlX3Jlc3BvbnNlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_template_info_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_template_names_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV90ZW1wbGF0ZV9uYW1lc19yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5TVFJFQU0uVEVNUExBVEUuTkFNRVMgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV90ZW1wbGF0ZV9uYW1lc19yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJhbGxPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInRvdGFsIiwKICAgICAgICAib2Zmc2V0IiwKICAgICAgICAibGltaXQiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJ0b3RhbCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfSwKICAgICAgICAib2Zmc2V0IjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9LAogICAgICAgICJsaW1pdCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXSwKICAib25lT2YiOiBbCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJhZGRpdGlvbmFsSXRlbXMiOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbEl0ZW1zIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic3RyZWFtcyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvbnN1bWVycyI6IHsKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fdGVtcGxhdGVfbmFtZXNfcmVzcG9uc2UiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_template_names_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV90ZW1wbGF0ZV9uYW1lc19yZXF1ZXN0Lmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlcXVlc3QgdG8gdGhlIEpldFN0cmVhbSAkSlMuQVBJLkNPTlNVTUVSLkxJU1QgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV90ZW1wbGF0ZV9uYW1lc19yZXF1ZXN0IiwKICAidHlwZSI6ICJvYmplY3QiLAogICJhbGxPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxJdGVtcyI6IGZhbHNlLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgIm9mZnNldCIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm9mZnNldCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_update_response"], _ = base64.StdEncoding.DecodeString("")
}
